import numpy as np

SRF_BGR_31_CHANNEL_400_700NM = [
    [18.73589729, 28.27536788, 34.26532218, 38.89578098, 43.92060554, 48.2447291, 49.34113124, 48.42053339, 45.65638999,
     39.93330299, 32.29464007, 23.01558074, 15.2443332, 10.07552324, 7.201548122, 5.080157997, 3.264370381, 2.297836673,
     1.812185775, 1.52638278, 1.125983598, 0.806662059, 0.587345148, 0.537235367, 0.686925654, 1.03072496, 1.226171082,
     1.139780943, 0.623173653, 0.374706952, 0.244239498],
    [6.425137553, 7.446242762, 8.096116496, 8.900800174, 10.36405115, 12.03762611, 14.42202255, 19.65569408,
     25.23192339, 28.83286975, 33.85398281, 42.82070851, 53.13000898, 59.61325583, 61.75104661, 59.59523025,
     53.90891291, 47.30047763, 40.19970471, 32.09065727, 23.35397023, 15.10836029, 9.611802365, 6.887123842,
     5.589670348, 5.345366907, 4.950957308, 4.0502356, 2.583613336, 1.465660475, 0.684460275],
    [7.111793475, 5.795795295, 4.319709787, 3.166535783, 2.451689508, 2.011189415, 1.765684355, 2.010858585,
     2.201868624, 2.451063484, 2.659444915, 3.44220031, 5.054634739, 6.803908502, 6.245753758, 4.315452, 4.102605146,
     5.592691346, 16.81750851, 41.22101035, 54.5222667, 56.03542013, 53.9843276, 50.13648326, 48.50472486, 46.65697227,
     42.49659626, 29.31238995, 14.30632494, 5.929299276, 2.348298176]
]


def h2rgb(hsi_data: np.ndarray, srf: list) -> np.ndarray:
    """
    Convert hyperspectral data into RGB images

    参数:
        hsi_data: Shape(B, 31, H, W)
        srf: Shape [3, 31]

    返回:
        rgb_image: RGB(B, 3, H, W)
    """
    # transpose
    B, C, H, W = hsi_data.shape
    hsi_reshaped = hsi_data.transpose(0, 2, 3, 1).reshape(B * H * W, C)

    # Spectral response
    rgb_reshaped = np.dot(hsi_reshaped, srf)

    # Reshape
    rgb_image = rgb_reshaped.reshape(B, 3, H, W)

    # Normalization
    rgb_image = np.clip(rgb_image, 0, 1)

    return rgb_image